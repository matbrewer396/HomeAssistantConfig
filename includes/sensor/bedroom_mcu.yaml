
  - platform: mqtt
    name: "Bedroom Temperature"
    state_topic: "bedroom/senorarray"
    unit_of_measurement: 'Â°C'
    value_template: "{{ value_json.temperature }}"
    expire_after : 180
    device_class: temperature
    availability_topic: "availability/bedroomMCU"
    payload_available: "online"
    payload_not_available: "offline"
  - platform: mqtt
    name: "Bedroom Humidity"
    state_topic: "bedroom/senorarray"
    unit_of_measurement: '%'
    value_template: "{{ value_json.humidity }}"
    expire_after : 180
    device_class: humidity
    availability_topic: "availability/bedroomMCU"
    payload_available: "online"
    payload_not_available: "offline"
  - platform: mqtt
    name: "Bedroom Light Level"
    state_topic: "bedroom/senorarray"
    unit_of_measurement: '%'
    value_template: "{{ value_json.lightlevel }}"
    expire_after : 180
    device_class: illuminance
    availability_topic: "availability/bedroomMCU"
    payload_available: "online"
    payload_not_available: "offline"
  - platform: mqtt
    name: "Bed Weight Senor"
    state_topic: "bedroom/bedweight"
    availability_topic: "availability/bedroomMCU"
    payload_available: "online"
    payload_not_available: "offline"
    expire_after : 180
    unit_of_measurement: 'Weight'
  - platform: template
    sensors:
      matt_in_bed:
        friendly_name: "Matt in Bed"
        value_template: >
          {{((states("sensor.bed_weight_senor")|float >= states("input_number.matt_bed_weight")|float and states("sensor.bed_weight_senor")|float <= states("input_number.both_in_bed_weight")|float)) or (states("sensor.bed_weight_senor")|float >= states("input_number.both_in_bed_weight")|float) }}
      danni_in_bed:
        friendly_name: "Danni in Bed"
        value_template: >
          {{((states("sensor.bed_weight_senor")|float >= states("input_number.danni_bed_weight")|float and states("sensor.bed_weight_senor")|float <= states("input_number.matt_bed_weight")|float )) or (states("sensor.bed_weight_senor")|float >= states("input_number.both_in_bed_weight")|float) }}
      num_in_master_bed:
        friendly_name: "Number of People in Bed"
        unit_of_measurement: 'people'
        value_template: >-
          {% if  states("sensor.bed_weight_senor")|float >= states("input_number.both_in_bed_weight")|float %}
              2
          {% elif states("sensor.bed_weight_senor")|float >= 3100000 %}
              1
          {% else %}
              0
          {% endif %}