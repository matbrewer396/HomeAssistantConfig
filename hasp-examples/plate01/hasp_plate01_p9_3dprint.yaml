##############################################################################
# Automations to monitor a 3d printer on page 9
# This set of automations require the OctoPrint component to be configured against
# a running OctoPrint installation and will fail without it.
# https://home-assistant.io/components/octoprint/

sensor:
- platform: octoprint
  name: OctoPrint
  monitored_conditions:
  - Current State
  - Temperatures
  - Job Percentage

octoprint:
  host: octoprint.local
  api_key: YOUROCTOPRINTAPIKEY

automation:
   # Set appropriate font for the status display on HASP init
  - alias: hasp_plate01_p9_3DPrinterInit
    trigger:
    - platform: state
      entity_id: 'binary_sensor.plate01_connected'
      to: 'on'
    - platform: homeassistant
      event: start
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[5].font'
        payload: '1'
   
  # Update status while printing
  - alias: hasp_plate01_p9_3DPrinterPrinting
    trigger:
    - platform: template
      value_template: "{% if is_state('sensor.octoprint_current_state', 'Printing') %}true{% endif %}"
    - platform: state
      entity_id: sensor.octoprint_job_percentage    
    condition:
    - condition: state
      entity_id: 'binary_sensor.plate01_connected'
      state: 'on'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].bco'
        payload: '5285'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].pco'
        payload: '65535'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].font'
        payload: '1'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].txt'
        payload_template: '"Status:Printing\rProgress:{{(states.sensor.octoprint_job_percentage.state)|default(0)|round(1)}}%"'

  # Update status while printer is online but not printing
  - alias: hasp_plate01_p9_3DPrinterOperational
    trigger:
    - platform: template
      value_template: "{% if is_state('sensor.octoprint_current_state', 'Operational') %}true{% endif %}"
    condition:
    - condition: state
      entity_id: 'binary_sensor.plate01_connected'
      state: 'on'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].bco'
        payload: '65535'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].pco'
        payload: '5285'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].font'
        payload: '2'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].txt'
        payload_template: '"Online"'
  
  # Update status while printer is paused
  - alias: hasp_plate01_p9_3DPrinterPaused
    trigger:
      platform: template
      value_template: "{% if is_state('sensor.octoprint_current_state', 'Paused') %}true{% endif %}"
    condition:
    - condition: state
      entity_id: 'binary_sensor.plate01_connected'
      state: 'on'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].bco'
        payload: '65535'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].pco'
        payload: '63488'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].font'
        payload: '2'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[4].txt'
        payload_template: '"Paused"'
  
  # Show the head and bed temps.  My locale is set for deg F, and I want deg C, so
  # the values are being converted in the template code
  - alias: hasp_plate01_p9_3DPrinterTempText
    trigger:
    - platform: state
      entity_id: sensor.octoprint_actual_tool0_temp
    - platform: state
      entity_id: sensor.octoprint_target_tool0_temp
    - platform: state
      entity_id: sensor.octoprint_actual_bed_temp
    - platform: state
      entity_id: sensor.octoprint_target_bed_temp
    condition:
    - condition: state
      entity_id: 'binary_sensor.plate01_connected'
      state: 'on'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[9].b[5].txt'
        payload_template: '"Head: {{((states.sensor.octoprint_actual_tool0_temp.state|float-32)*(5/9))|round(1)}}/{{((states.sensor.octoprint_target_tool0_temp.state|float-32)*(5/9))|int}}\r Bed: {{((states.sensor.octoprint_actual_bed_temp.state|float-32)*(5/9))|round(1)}}/{{((states.sensor.octoprint_target_bed_temp.state|float-32)*(5/9))|int}}"'
  
  # Every 30 seconds (default octoprint polling interval in Hass), add one pixel to the graph.
  # Don't bother sending data to the graph unless the page is active, waveform displays in Nextion
  # are always local, so the graph will reset every time you navigate away from the page.
  #     
  # The graph on page 9 has 4 divisions. We're calling the origin (y=0 in the graph) 50deg C and
  # the top line 250deg C.  Each pixel is one data point, the object on the page is 133 points tall.
  # my Location is using deg F, so convert from F to C then map 50-250 into a range of 1-133:
  # 50C = 122F, 250C = 482.  Thus the range of values in our chart will be 482-122 = 360 degF
  # 133/360 ~= 0.3694, so we can map our value in F to a 133-point-tall graph that goes from 50-250C
  # with the formula: (degF - 122) * 0.3694
  - alias: hasp_plate01_p9_3DPrinterTempGraph
    trigger:
      platform: time_pattern
      seconds: '/30'
    condition:
    - condition: template
      value_template: "{% if is_state('sensor.octoprint_current_state', 'Printing') or is_state('sensor.octoprint_current_state', 'Operational') or is_state('sensor.octoprint_current_state', 'Paused') %}true{% endif %}"
    - condition: state
      entity_id: 'input_number.hasp_plate01_activepage'
      state: '9.0'
    - condition: state
      entity_id: 'binary_sensor.plate01_connected'
      state: 'on'
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command'
        payload_template: "add 6,0,{{((states.sensor.octoprint_actual_tool0_temp.state|int-122)*0.3694)|int}}"
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command'
        payload_template: "add 6,1,{{((states.sensor.octoprint_actual_bed_temp.state|int-122)*0.3694)|int}}"